[build-system]
requires = ["setuptools >= 64"]
build-backend = "setuptools.build_meta"

[project]
name = "django_cached_auth_middleware"
dynamic = ["version"]
authors = [
    {name = "Sector Labs", email = "open-source@sectorlabs.ro"},
]
description = "Drop-in replacement for `django.contrib.auth.middleware.AuthenticationMiddleware` with cached `request.user`"
requires-python = ">=3.8"
license = { text = "MIT" }
readme = "README.md"

[project.optional-dependencies]
test = [
    "pytest",
    "black",
    "ruff",
    "poethepoet",
    "pytest-django"
]
publish = [
    "build==0.10.0",
    "twine==4.0.2",
]
django = ["django>=3.2.12,<5.0.0"]

[tool.setuptools.packages.find]
where = ["."]
include = ["django_cached_auth_middleware*"]
exclude = ["django_cached_auth_middleware.tests*"]
namespaces = false

[tool.setuptools.dynamic]
version = { attr = "django_cached_auth_middleware.__version__" }

[tool.poe.tasks]
fix = ["format", "lint_fix"]
verify = ["verify_format", "lint"]

format = "python -m black --config pyproject.toml ."
verify_format = "python -m black --config pyproject.toml --check ."

lint = "python -m ruff check --config ruff.toml ."
lint_fix = "python -m ruff check --config ruff.toml --fix ."

test = "python -m pytest"

[tool.black]
line-length = 110
target-version = ["py39"]
include = ".pyi?$"
exclude = '''
/( # Default config
   \.git
  | \.hg
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
  | migrations
  | env
  | .env
  | venv
  | .venv
  | .pytest_cache
  | .pipcache
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "django_cached_auth_middleware.tests.django.settings"
